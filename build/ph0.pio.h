// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --- //
// ph0 //
// --- //

#define ph0_wrap_target 0
#define ph0_wrap 31

static const uint16_t ph0_program_instructions[] = {
            //     .wrap_target
    0xa047, //  0: mov    y, osr          side 0     
    0x0781, //  1: jmp    y--, 1          side 0 [7] 
    0xa047, //  2: mov    y, osr          side 0     
    0xab42, //  3: nop                    side 1 [3] 
    0x0483, //  4: jmp    y--, 3          side 0 [4] 
    0xa047, //  5: mov    y, osr          side 0     
    0xae42, //  6: nop                    side 1 [6] 
    0x0086, //  7: jmp    y--, 6          side 0     
    0xa047, //  8: mov    y, osr          side 0     
    0x0f89, //  9: jmp    y--, 9          side 1 [7] 
    0xa047, // 10: mov    y, osr          side 0     
    0xae42, // 11: nop                    side 1 [6] 
    0x008b, // 12: jmp    y--, 11         side 0     
    0xa047, // 13: mov    y, osr          side 0     
    0xab42, // 14: nop                    side 1 [3] 
    0x048e, // 15: jmp    y--, 14         side 0 [4] 
    0xa047, // 16: mov    y, osr          side 0     
    0x0791, // 17: jmp    y--, 17         side 0 [7] 
    0xa047, // 18: mov    y, osr          side 0     
    0xab42, // 19: nop                    side 1 [3] 
    0x0493, // 20: jmp    y--, 19         side 0 [4] 
    0xa047, // 21: mov    y, osr          side 0     
    0xae42, // 22: nop                    side 1 [6] 
    0x0096, // 23: jmp    y--, 22         side 0     
    0xa047, // 24: mov    y, osr          side 0     
    0x0f99, // 25: jmp    y--, 25         side 1 [7] 
    0xa047, // 26: mov    y, osr          side 0     
    0xae42, // 27: nop                    side 1 [6] 
    0x009b, // 28: jmp    y--, 27         side 0     
    0xa047, // 29: mov    y, osr          side 0     
    0xab42, // 30: nop                    side 1 [3] 
    0x049e, // 31: jmp    y--, 30         side 0 [4] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ph0_program = {
    .instructions = ph0_program_instructions,
    .length = 32,
    .origin = -1,
};

static inline pio_sm_config ph0_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ph0_wrap_target, offset + ph0_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}

// Helper function (for use in C program) to initialize this PIO program
void ph0_program_init(PIO pio, uint sm, uint offset, float div, uint pin) {
    // Sets up state machine and wrap target. This function is automatically
    pio_sm_config c = ph0_program_get_default_config(offset);
    sm_config_set_sideset(&c,2,false,false);
    sm_config_set_sideset_pins(&c,pin);
    sm_config_set_in_shift(&c,false,false,32);
    sm_config_set_out_shift(&c,true,true,32);
    sm_config_set_jmp_pin(&c, 2);
    // Set the clock divider for the state machine
    sm_config_set_clkdiv(&c, div);
    // Load configuration and jump to start of the program
    pio_sm_init(pio, sm, offset, &c);
}

#endif

